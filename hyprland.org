#+title: Hyprland
#+PROPERTY: header-args:conf :comments link :tangle-mode (identity #o600) :mkdirp yes :tangle ~/.local/share/chezmoi/private_dot_config/hypr/hyprland.conf.tmpl

I saw some [[https://hyprland.org/][Hyprland]] screenshots and had to at least give it a go. So lets try
it.

* Install
#+begin_src sh
yay -S kitty hyprland xdg-desktop-portal-hyprland xdg-desktop-portal-gtk polkit-kde-agent qt6-wayland hyprpaper nwg-look qt6ct kvantum hyprpicker
#+end_src

- kitty :: terminal app recommended for Hyprland. My session didn't start from SDDM until I installed it, maybe investigate later as I'm not sure why I should have it, I like Alacritty.
- xdg-desktop-portal-hyprland :: Hyprlands for of XDPW with more features, like window sharing
- xdg-desktop-portal-gtk :: at least for file picker
- polkit-kde-agent :: as authentication agent
- qt6-wayland :: wayland support for qt6

** Screenshots
Script in [[./scripts/screenshot.sh.org][screenshot.sh]]

* Troubleshooting
** Share picker doesn‚Äôt use the system theme
https://wiki.hyprland.org/Useful-Utilities/Hyprland-desktop-portal/#share-picker-doesnt-use-the-system-theme

** GTK Themes and Icons
Looks like GTK themes and icons are set up in different way than in X, as all GTK apps has default theme for me.

I found out that there is *nwg-look* utility, which you can use to set them up same way as *lxapearance* which I used on X. And looks like it support even X.

I'm using *Adapta-Nokto-Ekta* theme with *Numix Square* icons at the moment.

** QT Themes and Icons
I'm settings theme with *qt6ct*, there I set style to *kvantum*. And with
*kwantummanager* you can then set suitable theme (*Adapta-dark* in my case).

For *qt6ct* to work, you need to set =QT_QPA_PLATFORMTHEME=qt6ct= variable.

* Configuration
** XDG portal configuration
#+begin_src conf :tangle ~/.local/share/chezmoi/private_dot_config/xdg-desktop-portal/hyprland-portals.conf
[preferred]
default=hyprland;gtk
#+end_src

** Hypridle & Hyprlock
There are new kids in town with ambitions to replace swayidle and swaylock. As
I'm not really satisfied with any of those and started to use them just
recently, it's time to test new toys.

Installed in Arch with ~yay -S hypridle hyprlock~

On notebook, you might want to install ~yay -S brightnessctl~ too.

*** Hyprlock
https://wiki.hyprland.org/Hypr-Ecosystem/hyprlock/

TODO: trash color scheme and adjust by myself

#+begin_src conf :tangle ~/.local/share/chezmoi/private_dot_config/hypr/hyprlock.conf.tmpl
$rosewater = rgb(f4dbd6)
$rosewaterAlpha = f4dbd6

$flamingo = rgb(f0c6c6)
$flamingoAlpha = f0c6c6

$pink = rgb(f5bde6)
$pinkAlpha = f5bde6

$mauve = rgb(c6a0f6)
$mauveAlpha = c6a0f6

$red = rgb(ed8796)
$redAlpha = ed8796

$maroon = rgb(ee99a0)
$maroonAlpha = ee99a0

$peach = rgb(f5a97f)
$peachAlpha = f5a97f

$yellow = rgb(eed49f)
$yellowAlpha = eed49f

$green = rgb(a6da95)
$greenAlpha = a6da95

$teal = rgb(8bd5ca)
$tealAlpha = 8bd5ca

$sky = rgb(91d7e3)
$skyAlpha = 91d7e3

$sapphire = rgb(7dc4e4)
$sapphireAlpha = 7dc4e4

$blue = rgb(8aadf4)
$blueAlpha = 8aadf4

$lavender = rgb(b7bdf8)
$lavenderAlpha = b7bdf8

$text = rgb(cad3f5)
$textAlpha = cad3f5

$subtext1 = rgb(b8c0e0)
$subtext1Alpha = b8c0e0

$subtext0 = rgb(a5adcb)
$subtext0Alpha = a5adcb

$overlay2 = rgb(939ab7)
$overlay2Alpha = 939ab7

$overlay1 = rgb(8087a2)
$overlay1Alpha = 8087a2

$overlay0 = rgb(6e738d)
$overlay0Alpha = 6e738d

$surface2 = rgb(5b6078)
$surface2Alpha = 5b6078

$surface1 = rgb(494d64)
$surface1Alpha = 494d64

$surface0 = rgb(363a4f)
$surface0Alpha = 363a4f

$base = rgb(24273a)
$baseAlpha = 24273a

$mantle = rgb(1e2030)
$mantleAlpha = 1e2030

$crust = rgb(181926)
$crustAlpha = 181926
#+end_src

#+begin_src conf :tangle ~/.local/share/chezmoi/private_dot_config/hypr/hyprlock.conf.tmpl
$accent = $mauve
$accentAlpha = $mauveAlpha
$font = JetBrainsMono Nerd Font

# GENERAL
general {
    disable_loading_bar = true
    hide_cursor = true
}

# BACKGROUND
background {
    monitor =
    blur_passes = 0
    # color = $base
}

label {
    monitor =
    text = Hi there, stranger...
    text_align = center # center/right or any value for default left. multi-line text alignment inside label container
    color = rgba(200, 200, 200, 1.0)
    font_size = 25
    font_family = Noto Sans
    rotate = 0 # degrees, counter-clockwise

    position = 0, 80
    halign = center
    valign = center
}
# # TIME
# label {
#     monitor =
#     text = cmd[update:30000] echo "$(date +"%R")"
#     color = $text
#     font_size = 90
#     font_family = $font
#     position = -30, 0
#     halign = right
#     valign = top
# }

# # DATE
# label {
#     monitor =
#     text = cmd[update:43200000] echo "$(date +"%A, %d %B %Y")"
#     color = $text
#     font_size = 25
#     font_family = $font
#     position = -30, -150
#     halign = right
#     valign = top
# }

# INPUT FIELD
input-field {
    monitor =
    size = 300, 60
    outline_thickness = 4
    dots_size = 0.2
    dots_spacing = 0.2
    dots_center = true
    outer_color = $accent
    inner_color = $surface0
    font_color = $text
    fade_on_empty = false
    placeholder_text = <span foreground="##$textAlpha"><i>Û∞åæ Logged in as </i><span foreground="##$accentAlpha">ü§∑‚Äç‚ôÄÔ∏è</span></span>
    hide_input = false
    check_color = $accent
    fail_color = $red
    fail_text = <i>$FAIL <b>($ATTEMPTS)</b></i>
    capslock_color = $yellow
    position = 0, -35
    halign = center
    valign = center
}
#+end_src

*** Hypridle
#+begin_src conf :tangle ~/.local/share/chezmoi/private_dot_config/hypr/hypridle.conf.tmpl
general {
    lock_cmd = pidof hyprlock || hyprlock       # avoid starting multiple hyprlock instances.
    before_sleep_cmd = loginctl lock-session    # lock before suspend.
    after_sleep_cmd = hyprctl dispatch dpms on  # to avoid having to press a key twice to turn on the display.
}

{{ if ne .battery_device ""  }}
listener {
    timeout = 150                                # 2.5min.
    on-timeout = brightnessctl -s set 10         # set monitor backlight to minimum, avoid 0 on OLED monitor.
    on-resume = brightnessctl -r                 # monitor backlight restore.
}

# turn off keyboard backlight, comment out this section if you dont have a keyboard backlight.
listener {
    timeout = 150                                          # 2.5min.
    on-timeout = brightnessctl -sd rgb:kbd_backlight set 0 # turn off keyboard backlight.
    on-resume = brightnessctl -rd rgb:kbd_backlight        # turn on keyboard backlight.
}

{{ end }}
listener {
    timeout = 300                                 # 5min
    on-timeout = loginctl lock-session            # lock screen when timeout has passed
}

listener {
    timeout = 330                                 # 5.5min
    on-timeout = hyprctl dispatch dpms off        # screen off when timeout has passed
    on-resume = hyprctl dispatch dpms on          # screen on when activity is detected after timeout has fired.
}

listener {
    timeout = 1800                                # 30min
    on-timeout = systemctl suspend                # suspend pc
}
#+end_src

** Hyprland

#+begin_src conf
# See https://wiki.hyprland.org/Configuring/Monitors/

# hyprpm isn't working for me at this moment, so I switched to aur hy3 pakckage.
# plugin = /usr/lib/libhy3.so

# my desktop
# {{ .chezmoi.hostname }}
{{ if eq .chezmoi.hostname "kocour" }}
monitor=desc:HAT Kamvas Pro 24 0xF0000004,3840x2160@60,0x0,1,transform,3,bitdepth,10
monitor=desc:Dell Inc. DELL P2723DE G1MP1L3,2560x1440@59.95100,2160x0,1,transform,1
monitor=desc:ASUSTek COMPUTER INC ROG XG27AQ M1LMQS010079,2560x1440@144.00600,3600x0,1
monitor=desc:Dell Inc. DELL P2723DE B1MP1L3,2560x1440@59.95100,6160x0,1,transform,3
# monitor=desc:HAT Kamvas Pro 24 0xF0000004,3840x2160@60,0x0,1
# monitor=desc:Dell Inc. DELL P2723DE G1MP1L3,2560x1440@59.95100,3840x0,1,transform,1
# monitor=desc:ASUSTek COMPUTER INC ROG XG27AQ M1LMQS010079,2560x1440@144.00600,5280x0,1
# monitor=desc:Dell Inc. DELL P2723DE B1MP1L3,2560x1440@59.95100,7840x0,1,transform,3
{{ else if eq .chezmoi.hostname "midget" }}
# my surface
monitor=desc:BOE 0x088B,1920x1280@60,0x0,1
{{ end }}
# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Execute your favorite apps at launch
# hyprpm - hypr plugin manager
exec-once = hyprpm reload -n

# I have to always reload hyprctl on start because of hy3 - this should work
# around it
#exec-once = hyprctl reload

#exec-once = ironbar
exec-once = waybar

exec-once = hyprpaper
exec-once = seafile-applet
exec-once = nm-applet
exec-once = /usr/lib/kdeconnectd
exec-once = /usr/lib/polkit-kde-authentication-agent-1

# corectrl for amd gpu
exec-once = [workspace 0 silent] corectrl

# dynamic screen configuration
# FIXME: disabling
#exec-once = kanshi

# update dbus env for hyprland portal
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

# lock
# exec-once = swayidle -w
exec-once = hypridle

# clipboard manager
exec-once = wl-paste --type text --watch cliphist store #Stores only text data
exec-once = wl-paste --type image --watch cliphist store #Stores only image data

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

# Some default env vars.
env = XCURSOR_SIZE,18
env = SSH_AUTH_SOCK,$XDG_RUNTIME_DIR/gnupg/S.gpg-agent.ssh

# theme for QT apps
env = QT_QPA_PLATFORMTHEME,qt6ct

# dark theme for GTK apps
exec = gsettings set org.gnome.desktop.interface gtk-theme "Adapta-Nokto-Eta"   # for GTK3 apps
exec = gsettings set org.gnome.desktop.interface color-scheme "prefer-dark"   # for GTK4 apps

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = cus_klaveska,us
    kb_variant =
    kb_model = pc104
    kb_options = grp:menu_toggle,ralt_switch,terminate:ctrl_alt_bksp,grp_led:scroll,ctrl:nocaps
    kb_rules =

    follow_mouse = 1
    mouse_refocus = true

    touchpad {
        natural_scroll = no
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

device {
    name = ydotoold-virtual-device
    kb_layout = us
    kb_variant =
    kb_options =
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 2
    gaps_out = 2
    border_size = 1
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)

    layout = hy3
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 10

    blur {
        enabled = yes
        size = 10
        passes = 1
    }

    drop_shadow = yes
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}
# dracula/hyprland
general {
    col.active_border = rgb(44475a) rgb(bd93f9) 90deg
    col.inactive_border = rgba(44475aaa)
    # non-gradient alternative
    #col.active_border = rgb(bd93f9)
    #col.inactive_border = rgba(44475aaa)
    #col.group_border = rgba(282a36dd)
    #col.group_border_active = rgb(bd93f9)
    # darker alternative
    #col.active_border = rgb(44475a) # or rgb(6272a4)
    #col.inactive_border = rgb(282a36)
    #col.group_border = rgb(282a36)
    #col.group_border_active = rgb(44475a) # or rgb(6272a4)

}
decoration {
    col.shadow = rgba(1E202966)
    # suggested shadow setting
    #drop_shadow = yes
    #shadow_range = 60
    #shadow_offset = 1 2
    #shadow_render_power = 3
    #shadow_scale = 0.97
}
#windowrulev2 = bordercolor rgb(ff5555),xwayland:1 # check if window is xwayland

animations {
    enabled = no

    # # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    # bezier = myBezier, 0.05, 0.9, 0.1, 1.05
    # bezier = easeInOutExpo, 0.87, 0, 0.13, 1

    # animation = windows, 1, 7, myBezier
    # animation = windowsOut, 1, 7, default, popin 80%
    # animation = border, 1, 10, default
    # animation = borderangle, 1, 8, default
    # animation = fade, 1, 7, default
    # #animation = workspaces, 1, 6, default
    # animation = workspaces, 1, 10, easeInOutExpo, fade
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_status = master
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = on
    workspace_swipe_invert = no
    workspace_swipe_cancel_ratio = 0.1
}

# group {
#    groupbar {
#        font_size = 10
#        gradients = false
#        col.inactive = rgba(282a36dd)
#        col.active = rgb(bd93f9) rgb(44475a) 90deg
#    }
# }

misc {
    disable_hyprland_logo = true
    disable_splash_rendering = true
    disable_autoreload = false
}

plugin {
    hy3 {
        tabs {
            height = 15
            padding = 5
            from_top = true
            rounding = 10
            render_text = true
            text_center = true
            text_padding = 3

            # active tab bar segment color
            col.active = 0xdf32b4ff

            # urgent tab bar segment color
            col.urgent = 0xffff4f4f

            # inactive tab bar segment color
            col.inactive = 0xdd282a36

            # active tab bar text color
            col.text.active = 0xff000000

            # urgent tab bar text color
            col.text.urgent = 0xff000000

            # inactive tab bar text color
            col.text.inactive = 0xff32b4ff
        }

        autotile {
            enable = true
            trigger_width = 800
            trigger_height = 500
        }
    }

        hyprfocus {
            enabled = false

            keyboard_focus_animation = shrink

            bezier = bezIn, 0.5,0.0,1.0,0.5
            bezier = bezOut, 0.0,0.5,0.5,1.0

            shrink {
                shrink_percentage = 0.99

                in_bezier = bezIn
                in_speed = 1

                out_bezier = bezOut
                out_speed = 3
            }
        }
}

# Window rules
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# windowrulev2 = tile,title:^(Playwright Test)$
windowrulev2 = workspace 8 silent,class:chrome
windowrulev2 = tile,class:chrome
windowrulev2 = suppressevent maximize,class:^(libreoffice.*)$

windowrule = workspace 9 silent,firefox
windowrule = workspace name:docs, thunar

windowrulev2 = float,class:(qalculate-gtk)
windowrulev2 = workspace special:calculator,class:(qalculate-gtk)

# screen sharing with xwaylandvideobridge - see https://wiki.hyprland.org/Useful-Utilities/Screen-Sharing/
windowrulev2 = opacity 0.0 override 0.0 override,class:^(xwaylandvideobridge)$
windowrulev2 = noanim,class:^(xwaylandvideobridge)$
windowrulev2 = nofocus,class:^(xwaylandvideobridge)$
windowrulev2 = noinitialfocus,class:^(xwaylandvideobridge)$

windowrulev2 = nomaxsize,class:^(org.raspberrypi.rpi-imager)$

# steam
windowrulev2 = stayfocused, title:^()$,class:^(steam)$
windowrulev2 = minsize 1 1, title:^()$,class:^(steam)$
windowrulev2 = fullscreen,class:^steam_app\d+$
# windowrulev2 = desc:ASUSTek COMPUTER INC ROG XG27AQ M1LMQS010079,class:^steam_app_\d+$
windowrulev2 = workspace 10,class:^steam_app_\d+$
workspace = 10, border:false, rounding:false

# Bindings
# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# bind flags
# l -> locked, aka. works also when an input inhibitor (e.g. a lockscreen) is active.
# r -> release, will trigger on release of a key.
# e -> repeat, will repeat when held.
# n -> non-consuming, key/mouse events will be passed to the active window in addition to triggering the dispatcher.
# m -> mouse, see below
# t -> transparent, cannot be shadowed by other binds.
# i -> ignore mods, will ignore modifiers.

# See https://wiki.hyprland.org/Configuring/Binds/ for bind examples
$mainMod = SUPER

bind = $mainMod, v, exec, cliphist list | rofi -dmenu | cliphist decode | wl-copy

# qalculate!
bind = $mainMod, Q, exec, pgrep qalculate-gtk && hyprctl dispatch togglespecialworkspace calculator || qalculate-gtk &

# this will send content of clipboard to my phone over kdeconnect
bind = $mainMod, Y, exec, kdeconnect-cli -n kryton --send-clipboard

# mute default mic
bind = $mainMod, M, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# Exec submap is for running apps I'm using often
# t - thunar
# c - qalculate
# p - pwgen

# EXEC SUBMAP START
bind = $mainMod, E, submap, exec
submap=exec

bind=, T, exec, thunar
bind=, T, submap,reset

bind=, C, exec, qalculate-gtk
bind=, C, submap,reset

bind=, P, exec, gopass pwgen --one-per-line 64 | rofi -dmenu -p "Select password:" | xargs --no-run-if-empty wl-copy
bind=, P, submap,reset

bind=, escape,submap,reset
submap=reset
# EXEC SUBMAP END

# launchers
bind = $mainMod, D, exec, rofi -show drun -show-icons
bind = $mainMod, S, exec, rofi -normal-window -show ssh

# bind = $mainMod, R, exec, remmina_menu
bind = $mainMod, R, submap, fastedit
submap = fastedit
bind = ,l, resizeactive, 50 0
bind = ,h, resizeactive, -50 0
bind = ,k, resizeactive, 0 -50
bind= ,j, resizeactive, 0 50
bind = CTRL, h, movefocus, l
bind = CTRL, l, movefocus, r
bind = CTRL, k, movefocus, u
bind = CTRL, j, movefocus, d
bind = SHIFT, h, movewindow, l
bind = SHIFT, l, movewindow, r
bind = SHIFT, k, movewindow, u
bind = SHIFT, j, movewindow, d
bind = , escape, submap, reset
submap = reset
# bind = $mainMod, F, exec, rofi -show window
bind = $mainMod, F, exec, hyprctl clients -j | jq --raw-output '.[]|[.address, .title]|join("\t")' | rofi -dmenu -display-columns 2 | awk '{ print $1 }' | xargs -I{} hyprctl dispatch focuswindow "address:{}"

# passwords
# p - type password
# P - type password slowly (for buggy terminals etc)
# u - type username
# o - type otp
bind = $mainMod, p,       exec, gopass --nosync ls --flat | rofi -dmenu -p 'Password for:' | xargs --no-run-if-empty gopass show -o | ydotool type --key-delay=10 --key-hold=10 --file=-
bind = $mainMod SHIFT, p, exec, gopass --nosync ls --flat | rofi -dmenu -p 'Password for:' | xargs --no-run-if-empty gopass show -c
bind = $mainMod, u, exec, gopass --nosync ls --flat | rofi -dmenu -p 'User for:' | xargs -I "{}" --no-run-if-empty gopass show '{}' user | ydotool type --key-delay=10 --key-hold=10 --file=-
bind = $mainMod, o, exec, gopass --nosync ls --flat otp | rofi -dmenu -p 'OTP for:' | xargs --no-run-if-empty gopass otp | sed 's/ .*//' | ydotool type --key-delay=10 --key-hold=10 --file=-

# notification center
# show hide
bind = $mainMod, N, exec, systemctl --user --signal=USR1 kill deadd-notification-center.service
# clear popups
bind = $mainMod SHIFT, N, exec, notify-send.py a --hint boolean:deadd-notification-center:true string:type:clearPopups
# clear in center
bind = SUPER+ALT, N, exec, notify-send.py a --hint boolean:deadd-notification-center:true string:type:clearInCenter

# screenshot of selected area copied to clipboard
# bind = $mainMod, c, exec, grimblast copy area
bind = $mainMod, c, exec, ~/bin/screenshot.sh

# screenshot of selected area saved to ~/tmpfs/screenshot.png
bind = $mainMod SHIFT, C, exec, grimblast save area ~/tmpfs/screenshot.png

# resize window for 640x400 screenshots
bind = $mainMod, x, resizeactive, exact 640 400

# color picker
bind = SUPER+ALT, c, exec, hyprpicker --autocopy --format=hex

# I'm using alacritty as my main terminal
bind = $mainMod SHIFT, RETURN, exec, alacritty

# special workspace
bind = $mainMod, escape, togglespecialworkspace
bind = $mainMod SHIFT, escape, movetoworkspace, special

# lock screen
bind = ,Print, exec, loginctl lock-session

# Layout related binds
bind = $mainMod SHIFT, Q, hy3:killactive

bind = $mainMod, g, submap, group
submap=group
bind = , h, hy3:makegroup, h
bind = , h, submap, reset

bind = , v, hy3:makegroup, v
bind = , v, submap, reset

bind = , g, hy3:changegroup, toggletab
bind = , g, submap, reset

bind = , t, hy3:makegroup, tab
bind = , t, submap, reset

bind = , u, hy3:changegroup, untab
bind = , u, submap, reset

bind = , r, hy3:changefocus, raise
bind = , r, submap, reset

bind = , l, hy3:changefocus, lower
bind = , l, submap, reset

bind = , e, hy3:expand, expand
bind = , e, submap, reset

bind = , b, hy3:expand, base
bind = , b, submap, reset

bind = , o, hy3:changegroup, opposite
bind = , o, submap, reset
bind=, escape,submap,reset
submap=reset

bind = $mainMod, T, togglefloating,
bind = $mainMod SHIFT, F, fullscreen,
bind = $mainMod, B, pseudo, # dwindle
bind = $mainMod, /, togglesplit, # dwindle
# bind = $mainMod, G, togglegroup
# bind = $mainMod SHIFT, G,

# switch to workspace selected from list
bind = $mainMod, I, exec, hyprctl -j workspaces | jq -r '.[] | .name' | rofi -dmenu -p "Workspace:"  | xargs -r ~/bin/hypr-switch-workspace

# move window to workspace selected from list
bind = $mainMod SHIFT, I, exec, hyprctl -j workspaces | jq -r '.[] | .name' | rofi -dmenu -p "Target workspace:"  | xargs -r hyprctl dispatch movetoworkspacesilent

# Move focus with mainMod + motion keys
bind = $mainMod, H, hy3:movefocus, l
bind = $mainMod, L, hy3:movefocus, r
bind = $mainMod, K, hy3:movefocus, u
bind = $mainMod, J, hy3:movefocus, d

# bind = $mainMod+ALT, J, changegroupactive, f
# bind = $mainMod+ALT, L, changegroupactive, f
# bind = $mainMod+ALT, K, changegroupactive, b
# bind = $mainMod+ALT, H, changegroupactive, b

# Move focus to monitor
bind = $mainMod, a, focusmonitor, l
bind = $mainMod, semicolon, focusmonitor, r

# What does dis do? move focus only to visible?
bind = $mainMod+ALT, h, hy3:movefocus, l, visible
bind = $mainMod+ALT, j, hy3:movefocus, d, visible
bind = $mainMod+ALT, k, hy3:movefocus, u, visible
bind = $mainMod+ALT, l, hy3:movefocus, r, visible

bind = $mainMod+ALT+SHIFT, h, hy3:movewindow, l, once, visible
bind = $mainMod+ALT+SHIFT, j, hy3:movewindow, d, once, visible
bind = $mainMod+ALT+SHIFT, k, hy3:movewindow, u, once, visible
bind = $mainMod+ALT+SHIFT, l, hy3:movewindow, r, once, visible

# focus tab by index
bind = $mainMod+ALT, code:10, hy3:focustab, index, 01
bind = $mainMod+ALT, code:11, hy3:focustab, index, 02
bind = $mainMod+ALT, code:12, hy3:focustab, index, 03
bind = $mainMod+ALT, code:13, hy3:focustab, index, 04
bind = $mainMod+ALT, code:14, hy3:focustab, index, 05
bind = $mainMod+ALT, code:15, hy3:focustab, index, 06
bind = $mainMod+ALT, code:16, hy3:focustab, index, 07
bind = $mainMod+ALT, code:17, hy3:focustab, index, 08
bind = $mainMod+ALT, code:18, hy3:focustab, index, 09
bind = $mainMod+ALT, code:19, hy3:focustab, index, 10

# Move window with mainMod + motion keys
bind = $mainMod SHIFT, h, hy3:movewindow, l
bind = $mainMod SHIFT, l, hy3:movewindow, r
bind = $mainMod SHIFT, k, hy3:movewindow, u
bind = $mainMod SHIFT, j, hy3:movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, code:10, focusworkspaceoncurrentmonitor, 1
bind = $mainMod, code:11, focusworkspaceoncurrentmonitor, 2
bind = $mainMod, code:12, focusworkspaceoncurrentmonitor, 3
bind = $mainMod, code:13, focusworkspaceoncurrentmonitor, 4
bind = $mainMod, code:14, focusworkspaceoncurrentmonitor, 5
bind = $mainMod, code:15, focusworkspaceoncurrentmonitor, 6
bind = $mainMod, code:16, focusworkspaceoncurrentmonitor, 7
bind = $mainMod, code:17, focusworkspaceoncurrentmonitor, 8
bind = $mainMod, code:18, focusworkspaceoncurrentmonitor, 9
bind = $mainMod, code:19, focusworkspaceoncurrentmonitor, 10
bind = $mainMod, code:20, focusworkspaceoncurrentmonitor, 11

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, code:10, movetoworkspacesilent, 1
bind = $mainMod SHIFT, code:11, movetoworkspacesilent, 2
bind = $mainMod SHIFT, code:12, movetoworkspacesilent, 3
bind = $mainMod SHIFT, code:13, movetoworkspacesilent, 4
bind = $mainMod SHIFT, code:14, movetoworkspacesilent, 5
bind = $mainMod SHIFT, code:15, movetoworkspacesilent, 6
bind = $mainMod SHIFT, code:16, movetoworkspacesilent, 7
bind = $mainMod SHIFT, code:17, movetoworkspacesilent, 8
bind = $mainMod SHIFT, code:18, movetoworkspacesilent, 9
bind = $mainMod SHIFT, code:19, movetoworkspacesilent, 10
bind = $mainMod SHIFT, code:20, movetoworkspacesilent, 11

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, hy3:movewindow
bindm = $mainMod, mouse:273, resizewindow

# focus and switch between tabs with mouse
bindn = , mouse:272, hy3:focustab, mouse
bindn = , mouse_down, hy3:focustab, l, require_hovered
bindn = , mouse_up, hy3:focustab, r, require_hovered

#+end_src

** Wallpapers

#+begin_src conf :tangle ~/.local/share/chezmoi/private_dot_config/hypr/hyprpaper.conf.tmpl
preload = ~/Seafile/Kepiho/Dokumenty/Wallpapers/the-mandalorian-4kartworks-ib-1440x2560.jpg
preload = ~/Seafile/Kepiho/Dokumenty/Wallpapers/kdc.jpg
preload = ~/Seafile/Kepiho/Dokumenty/Wallpapers/2560x1440_Witcher3_geralt-trophies.png
preload = ~/Seafile/Kepiho/Dokumenty/Wallpapers/the-mandalorian-minimalist-art-4k-kj-1440x2560.jpg

wallpaper=desc:HAT Kamvas Pro 24 0xF0000004,~/Seafile/Kepiho/Dokumenty/Wallpapers/the-mandalorian-4kartworks-ib-1440x2560.jpg
wallpaper=desc:Dell Inc. DELL P2723DE G1MP1L3,~/Seafile/Kepiho/Dokumenty/Wallpapers/kdc.jpg
wallpaper=desc:ASUSTek COMPUTER INC ROG XG27AQ M1LMQS010079,~/Seafile/Kepiho/Dokumenty/Wallpapers/2560x1440_Witcher3_geralt-trophies.png
wallpaper=desc:Dell Inc. DELL P2723DE B1MP1L3,~/Seafile/Kepiho/Dokumenty/Wallpapers/the-mandalorian-minimalist-art-4k-kj-1440x2560.jpg
#+end_src
** Support scripts
*** Switch Workspace :ARCHIVE:
No longer needed, as hyprland has Xmonad style =focusworkspaceoncurrentmonitor= dispatcher now. Yay!

#+begin_src sh :tangle ~/.local/share/chezmoi/bin/executable_hypr-switch-workspace :mkdirp yes :shebang #!/bin/bash
set -euo pipefail

readonly DEBUG=0

which jq >&/dev/null || notify-send --urgency=critical "jq not installed"

debug() {
    if [[ "$DEBUG" -eq 1 ]]; then
        notify-send --urgency=low "$1"
    fi
}

readonly WWS=$1

[ -n "$WWS" ] || exit 1 # WWS undefined


# numeric id
if [[ "$WWS" =~ ^[0-9]+$ ]]; then
    ID_FIELD="id"
    # monitor with WWS
    MONITOR_WWS=$(hyprctl -j workspaces | jq --arg jq_wws "$WWS" -r '.[]|select(.id == ($ARGS.named.jq_wws | tonumber))|.monitor')
    WWS_ID="$WWS"
else
    ID_FIELD="name"
    # monitor with WWS
    MONITOR_WWS=$(hyprctl -j workspaces | jq --arg jq_wws "$WWS" -r '.[]|select(.name == ($ARGS.named.jq_wws))|.monitor')
    WWS_ID="name:$WWS"
fi

read -r WS_CURRENT MONITOR_CURRENT <<<$(hyprctl -j activeworkspace | jq -r --arg jq_id_field "$ID_FIELD" --raw-output '"\(.[$jq_id_field]) \(.monitor)"')

# 1. Do nothing if we are already on WWS
if [[ "$WS_CURRENT" == "$WWS" ]]; then
    debug "You are already on WS $WWS_ID. Not switching."

# . If WS doesn't exist, create it
elif [[ -e "$MONITOR_WWS" ]]; then
    debug "Creating new WS $WWS_ID."
    hyprctl dispatch workspace "$WWS_ID"

# . If WWS is available on our monitor
elif [[ "$MONITOR_WWS" == "$MONITOR_CURRENT" ]]; then
    debug "Switching to WS $WWS_ID on same monitor."
    hyprctl dispatch workspace "$WWS_ID"

# . If WWS is available on other monitor
else
    readonly MONITOR_WWS_ACTIVE_WS=$(hyprctl -j monitors | jq --arg jq_mon "$MONITOR_WWS" --arg jq_id_field "$ID_FIELD" '.[]|select(.name==$ARGS.named.jq_mon)|.activeWorkspace|.[$jq_id_field]')

    # . If WWS is active on other monitor
    debug "monitor with WWS is $MONITOR_WWS and active ws is $MONITOR_WWS_ACTIVE_WS"

    if [[ "$WWS" == "$MONITOR_WWS_ACTIVE_WS" ]]; then
        debug "Swapping active workspaces with monitor $MONITOR_WWS."
        hyprctl dispatch swapactiveworkspaces "$MONITOR_CURRENT $MONITOR_WWS"

    # . If WWS isn't active on other monitor
    else
        debug "Fetching workspace $WWS_ID from monitor $MONITOR_WWS."
        hyprctl --batch "dispatch moveworkspacetomonitor $WWS_ID $MONITOR_CURRENT ; dispatch workspace $WWS_ID"
    fi
fi
#+end_src


** Tablet

*** Automatic orientation
- [[https://github.com/JeanSchoeller/iio-hyprland][GitHub - JeanSchoeller/iio-hyprland: Listen iio-sensor-proxy and auto change ...]]

*** Virtual keyboard
- [[https://github.com/jjsullivan5196/wvkbd][GitHub - jjsullivan5196/wvkbd: On-screen keyboard for wlroots]]

