#+TITLE: i3wm
#+PROPERTY: header-args:conf :comments link :tangle-mode (identity #o400) :mkdirp yes :tangle ~/.local/share/chezmoi/private_dot_config/i3/config

* Install
** Arch Linux
#+begin_src conf :tangle etc/yupfiles/i3.yup
i3-gaps latest noaur
i3blocks latest noaur
i3status latest noaur
i3status-rust-git latest aur
xcape latest noaur
pulseaudio latest aur
pulseaudio-bluetooth latest aur
pulseaudio-zeroconf latest aur
jq latest noaur
betterlockscreen latest
#+end_src

* TODO Workspace Groups
Looks exactly like what I need for personal/work stuff.

https://github.com/infokiller/i3-workspace-groups

* Screen lock
I switched from my custom scripts to [[https://github.com/betterlockscreen/betterlockscreen][betterlockscreen]].

** Installing betterlockscreen
#+begin_src sh
yay betterlockscreen
systemctl enable betterlockscreen@$USER.service
#+end_src

* TODO Xinitrc
I was used to start X with =startx= command, but it has been causing some issues
lately, so I switched to display manager, currently cddm. Any display manager
which is capable of using [[file:~/.xprofile][.xprofile]] should suffice. And, if you are able to run
=startx=, it should work too.

** xprofile
#+begin_src conf :tangle ~/.local/share/chezmoi/dot_xprofile
#!/bin/sh
userresources=$HOME/.Xresources

# merge in defaults and keymaps
[ -f "$userresources" ] && xrdb -merge "$userresources"

# setup my keyboard
setxkbmap cus_klaveska,us -option grp:menu_toggle,ralt_switch,terminate:ctrl_alt_bksp,grp_led:scroll,ctrl:nocaps && xcape -e 'Control_L=Escape'

# Camlink fix
[ -f /usr/local/lib/camlink/camlink.so ] && export LD_PRELOAD=/usr/local/lib/camlink/camlink.so

# Alacritty DPI multi monitor fix
export WINIT_X11_SCALE_FACTOR=1
export PATH=~/bin:~/.local/bin:$PATH
#+end_src

** xinitrc
[[file:~/.xinitrc][.xinitrc]] is used for =startx= method. We simply source =.xprofile= and run i3.

#+begin_src conf :tangle ~/.local/share/chezmoi/dot_xinitrc
#!/bin/sh
# merge sysresources
sysresources=/etc/X11/xinit/.Xresources
[ -f $sysresources ] && xrdb -merge "$sysresources"

[ -f "$HOME/.xprofile" ] && source "$HOME/.xprofile"

# run systemd user session
/etc/X11/xinit/xinitrc.d/50-systemd-user.sh

exec i3
#+end_src

* TODO Autotiling / evenly distributed windows
Not much luck so far, but here are some hints:
- [[https://www.reddit.com/r/i3wm/comments/1sdc39/alternating_horizontal_and_vertical_splitting/][Alternating Horizontal and Vertical Splitting : i3wm]]
- [[https://github.com/olemartinorg/i3-alternating-layout][GitHub - olemartinorg/i3-alternating-layout: Scripts to open new windows in i...]]
- [[https://github.com/nwg-piotr/autotiling][GitHub - nwg-piotr/autotiling: Script for sway and i3 to automatically switch...]]

What I want is to be able to switch layout to evenly distributed on specific
workspace and easily switch i.e. between tabbed and this one. When I open new
window, everything rearrange (which might be weird).

* Config

** i3
#+begin_src conf
# i3 config file (v4)

set $mod Mod4

# pojmenování ploch
set $ws1 "1: web"
set $ws2 "2: term"
set $ws3 "3: mail"
set $ws4 "4: emacs"
set $ws5 "5: code"
set $ws6 "6: misc"
set $ws7 "7: misc"
set $ws8 "8: chrome"
set $ws9 "9: ff"
set $ws0 "0: fs"
set $ws11 "11: ansible"

exec --no-startup-id ~/bin/sway.autostart

# turn of screen blanking
exec --no-startup-id xset s off

default_border none
hide_edge_borders smart
# workspace_auto_back_and_forth yes

gaps inner 4
gaps outer -4
# asi fakci jen ve sway
smart_gaps on

### Assigns
#assign [class="^Riot$"] → jabber
#assign [class="^Firefox$"] → $ws9
for_window [class="^Qalculate"] floating enable
for_window [class="floating"] floating enable
for_window [class="tw-com-aten-ikvm-KVMMain"] floating disable
assign [class="tw-com-aten-ikvm-KVMMain"] → $ws0

# autostarts
exec --no-startup-id riot-web
# exec safeeyes

### Variables
#
# Logo key. Use Mod1 for Alt.

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
#set $term urxvt
set $term alacritty
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
#set $menu dmenu_path | dmenu | xargs i3-msg exec
#set $menu rofi -combi-modi run,drun -show combi -modi combi -show-icons -combi-hide-mode-prefix
set $switchws ~/bin/i3-switch-workspace

# jump to urgent window
bindsym $mod+x [urgent=latest] focus

#set $pass gopass ls --flat | rofi -dmenu -p 'Password for:' | xargs --no-run-if-empty gopass show -o | xdotool type --delay 20 --clearmodifiers --file -
set $pass gopass ls --flat | rofi -dmenu -p 'Password for:' | xargs --no-run-if-empty gopass show -o | xdotool type --delay 20 --file -
bindsym $mod+p exec --no-startup-id $pass

#set $passu gopass ls --flat | rofi -dmenu -p 'User for:' | xargs -I {} --no-run-if-empty gopass show "{}" user | xdotool type --delay 20 --clearmodifiers --file -
set $passu gopass ls --flat | rofi -dmenu -p 'User for:' | xargs -I {} --no-run-if-empty gopass show "{}" user | xdotool type --delay 20 --file -
bindsym $mod+u exec --no-startup-id $passu

set $otp gopass ls --flat otp | rofi -dmenu -p 'OTP for:' | xargs --no-run-if-empty gopass otp | sed 's/ .*//' | xdotool type --clearmodifiers --file -
bindsym $mod+o exec --no-startup-id $otp

set $multiline ~/bin/xdo_multiple_lines
bindsym $mod+Shift+m exec --no-startup-id $multiline


set $menu2 rofi -show drun -show-icons
bindsym $mod+Shift+d exec $menu2

set $menu "PATH=$PATH:~/bin rofi -combi-modi drun,run -show combi -modi combi -show-icons -combi-hide-mode-prefix true"

set $ssh rofi -show ssh
bindsym $mod+s exec $ssh

# pozor nemůžu použít za xargs $switchws z tohoto configu protože by se to bralo jako shellová proměnná
# bylo by dobré přijít na to jak to dělat
set $workspaces_switch i3-msg -t get_workspaces | jq '.[] | .name' | sed 's/"//g' | rofi -dmenu -p 'Workspace:' | xargs -r ~/bin/i3-switch-workspace
bindsym $mod+i exec --no-startup-id $workspaces_switch

bindsym $mod+f exec --no-startup-id "rofi -show window"

bindsym $mod+r exec --no-startup-id "remmina_menu"
bindsym --release Print exec betterlockscreen -l

### Key bindings
#
# Basics:
#
# start a terminal
bindsym $mod+Shift+Return exec $term

# kill focused window
bindsym $mod+Shift+c kill

# start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod

# reload the configuration file
bindsym $mod+Alt+r reload

# exit sway (logs you out of your Wayland session)
bindsym $mod+Alt+Shift+e exec i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'i3-msg exit'
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#
# Moving around screens
#
bindsym $mod+a focus output left
bindsym $mod+semicolon focus output right

# Pro US klávesnici - navíc to tady musím nechat i kvůli tomu,
# aby se správně pojmenovaly plochy protože i3wm je
# pojmenovává dle bindsym viz https://github.com/i3/i3/issues/1414

bindcode $mod+Alt+Shift+10 workspace $ws1
bindcode $mod+Alt+Shift+11 workspace $ws2
bindcode $mod+Alt+Shift+12 workspace $ws3
bindcode $mod+Alt+Shift+13 workspace $ws4
bindcode $mod+Alt+Shift+14 workspace $ws5
bindcode $mod+Alt+Shift+15 workspace $ws6
bindcode $mod+Alt+Shift+16 workspace $ws7
bindcode $mod+Alt+Shift+17 workspace $ws8
bindcode $mod+Alt+Shift+18 workspace $ws9
bindcode $mod+Alt+Shift+19 workspace $ws0
bindcode $mod+Alt+Shift+20 workspace $ws11

bindcode $mod+10 exec --no-startup-id $switchws $ws1
bindcode $mod+11 exec --no-startup-id $switchws $ws2
bindcode $mod+12 exec --no-startup-id $switchws $ws3
bindcode $mod+13 exec --no-startup-id $switchws $ws4
bindcode $mod+14 exec --no-startup-id $switchws $ws5
bindcode $mod+15 exec --no-startup-id $switchws $ws6
bindcode $mod+16 exec --no-startup-id $switchws $ws7
bindcode $mod+17 exec --no-startup-id $switchws $ws8
bindcode $mod+18 exec --no-startup-id $switchws $ws9
bindcode $mod+19 exec --no-startup-id $switchws $ws0
bindcode $mod+20 exec --no-startup-id $switchws $ws11

# move focused container to workspace
bindcode $mod+Shift+10 move container to workspace $ws1
bindcode $mod+Shift+11 move container to workspace $ws2
bindcode $mod+Shift+12 move container to workspace $ws3
bindcode $mod+Shift+13 move container to workspace $ws4
bindcode $mod+Shift+14 move container to workspace $ws5
bindcode $mod+Shift+15 move container to workspace $ws6
bindcode $mod+Shift+16 move container to workspace $ws7
bindcode $mod+Shift+17 move container to workspace $ws8
bindcode $mod+Shift+18 move container to workspace $ws9
bindcode $mod+Shift+19 move container to workspace $ws0
bindcode $mod+Shift+20 move container to workspace $ws11

#
# Layout stuff:
#
workspace_layout tabbed
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+Shift+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+shift+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+t floating toggle
bindsym $mod+Shift+t focus mode_toggle

# Swap focus between the tiling area and the floating area
# bindsym $mod+space focus mode_toggle
bindsym --release $mod+space layout toggle split tabbed

# move focus to the parent container
# bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
#bindsym $mod+Shift+ move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#bindsym $mod+ scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+r mode "resize"

# Colors

# class                 border    backgr    text    indicator child_border
client.focused          #00000022 #98fb98aa #ffffff #32cd32   #2e8b57
client.focused_inactive #00000022 #285577aa #ffffff #2e9ef4   #285577
client.unfocused        #00000022 #222222aa #888888 #292d2e   #222222
client.urgent           #00000022 #900000aa #ffffff #900000   #900000
client.placeholder      #00000022 #0c0c0caa #ffffff #000000   #0c0c0c

client.background       #ffffff

#
# Status Bar:
#
font pango: Terminus 9
bar {
    position top

    status_command /usr/bin/i3status-rs ~/.config/i3/status.toml

    tray_output primary
    tray_padding 2

    font pango: Terminus 8
    colors {
        separator #666666
        background #222222
        statusline #dddddd

        focused_workspace #0088CC #0088CC #ffffff
        active_workspace #333333 #333333 #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace #2f343a #900000 #ffffff
    }
}

set $workspaces_send "i3-msg -t get_workspaces | jq '.[] | .name' | sed 's/\\"//g' | rofi -dmenu -p 'Workspace:' | xargs -I {} i3-msg 'move container to workspace {}; workspace {}'"
bindsym $mod+Shift+i exec --no-startup-id $workspaces_send
#+end_src

** status
I'm using [[https://github.com/greshake/i3status-rust][i3status-rust]] with pretty basic config:

#+begin_src conf :tangle ~/.local/share/chezmoi/private_dot_config/i3/status.toml.tmpl
icons = "awesome"

[theme]
#name = "gruvbox-dark"
name = "gruvbox-dark"

[theme.overrides]
# pango markup viz https://developer.gnome.org/pygtk/stable/pango-markup-language.html
# separatory viz https://github.com/ryanoasis/powerline-extra-symbols
separator = "<span size='large' font_family='TerminessTTF Nerf Dont Mono' stretch='ultraexpanded'>\ue0c7</span>"

[[block]]
block = "focused_window"

[[block]]
block = "custom"
command = ''' ~/bin/status-podpora '''
json = true
interval = 60
[[block.click]]
button = "left"
cmd = "xdg-open 'https://projects.igloonet.cz/projects/hosting/agile/board?query_id=304'"

[[block]]
block = "custom"
command = ''' ~/bin/status-clocked_in '''
json = true

# [[block]]
# block = "music"
# player = "spotify"
# buttons = ["play", "next"]
# max_width = 25
# marquee = false

{{ if .battery_device }}
[[block]]
block = "battery"
device = "{{ .battery_device }}"

{{ end }}
# [[block]]
# block = "sound"
# driver = "pulseaudio"

[[block]]
block = "maildir"
interval = 60
inboxes = ["Maily/kepi/INBOX"]
threshold_warning = 6
threshold_critical = 20

# [[block]]
# block = "net"
# device = "wlp64s0"
# ssid = true
# speed_up = false
# speed_down = false
# interval = 5

# [[block]]
# block = "net"
# device = "enp59s0f1"
# speed_up = false
# speed_down = false
# interval = 5

[[block]]
block = "memory"
format_mem = "$mem_used.eng(3,B,M) $mem_avail_percents.eng(2)"
display_type = "memory"
clickable = true
interval = 5
warning_mem = 80
critical_mem = 95

[[block]]
block = "time"
interval = 5
format = "%a %_d/%m %R"

#+end_src

** Support scripts

*** Switch Workspace
#+begin_src conf :tangle ~/.local/share/chezmoi/bin/executable_i3-switch-workspace :mkdirp yes :shebang #!/bin/bash
which jq || notify-send --urgency=critical "jq not installed"

readonly WORKSPACE_WANTED=$1
readonly OUTPUT_ACTIVE=$(i3-msg -t get_workspaces | jq '.[] | select(.focused==true) | .output')
readonly OUTPUT_WORKSPACE=$(i3-msg -t get_workspaces | jq --arg NAME "$WORKSPACE_WANTED" '.[] | select(.name==$NAME) | select(.visible==true) | .output')

PRE=""
[[ -n "$OUTPUT_WORKSPACE" ]] && PRE="move workspace to output ${OUTPUT_WORKSPACE};"

i3-msg "${PRE}workspace ${WORKSPACE_WANTED}; move workspace to output ${OUTPUT_ACTIVE}"
sleep 0.1
i3-msg "focus output ${OUTPUT_ACTIVE}"

# problém s empty workspacama
# https://sainathadapa.github.io/blog/i3-empty-workspace-workaround/
#+end_src

*** Status Clocked In
#+begin_src conf :tangle ~/.local/share/chezmoi/bin/executable_status-clocked_in :mkdirp yes :shebang #!/bin/bash
if ps -ef | grep 'server-name "m[u]"' > /dev/null; then
   emacs --batch --eval "(progn (require 'server) (princ (format \"%s\\n\" (server-eval-at \"mu\" '(org-clock-current-task-to-i3status-json)))))" || echo '{"text": ""}'
else
  echo '{"text": ""}'
fi
#+end_src
